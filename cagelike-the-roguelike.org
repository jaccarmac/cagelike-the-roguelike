#+TITLE: Cagelike the roguelike.

#+BEGIN_SRC text :tangle UNLICENSE :padline no
  This is free and unencumbered software released into the public domain.

  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this
  software, either in source code form or as a compiled binary, for any purpose,
  commercial or non-commercial, and by any means.

  In jurisdictions that recognize copyright laws, the author or authors of this
  software dedicate any and all copyright interest in the software to the public
  domain. We make this dedication for the benefit of the public at large and to
  the detriment of our heirs and successors. We intend this dedication to be an
  overt act of relinquishment in perpetuity of all present and future rights to
  this software under copyright law.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
  AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

  For more information, please refer to <http://unlicense.org/>
#+END_SRC

For now, I'm just following the directions for [[http://www.roguebasin.com/index.php?title=Rot.js_tutorial,_part_1][this]] rot.js tutorial step in
semi-literate Org form.

#+NAME: skeleton
#+BEGIN_SRC web
  <!doctype html>
  <html>
      <head>
          <title>Rudimentary rot.js "game".</title>
      </head>
      <body onload="Game.init()">
          <h1>Rudimentary game.</h1>
          <script type="text/javascript" src="rot.js/rot.min.js"></script>
          <script type="text/javascript" src="game.js"></script>
      </body>
  </html>
#+END_SRC

#+NAME: game
#+BEGIN_SRC web
  var Game = {
      init: function() {
          this.display = new ROT.Display();
          document.body.appendChild(this.display.getContainer());
      }
  };
#+END_SRC

* Set up Boot/Clojurescript project.

  Cagelike is written in Clojurescript, and I prefer Boot to Leiningen as a
  Clojure(script) build tool. There are plenty of templates for simple
  Boot/Clojurescript projects out there, including [[https://github.com/martinklepsch/tenzing][Tenzing]], which much of my
  own configuration is taken from. I have chosen to write my own and not use an
  existing template for two reasons. First, nothing I have found is set up
  quite the way I like, in a literate Org file and neighboring tangled
  files. Secondly, I'm still in the process of learning this ecosystem and
  nothing hinders my technical learning more than copying and pasting.

  According to the documentation of [[https://github.com/adzerk-oss/boot-cljs-repl][=boot-cljs-repl=]], which we will add and
  configure a little later, we need to pin a specific Clojure version to the
  Boot project.

  #+NAME: pinned-clojure-version
  #+BEGIN_SRC conf
    BOOT_CLOJURE_NAME=org.clojure/clojure
    BOOT_CLOJURE_VERSION=1.8.0-RC4
  #+END_SRC

* Tangle source code.
   :PROPERTIES:
   :header-args: :noweb no-export :padline no
   :END:

  All files get tangled to the directory that this file is in.

** =boot.properties=

   #+BEGIN_SRC conf :tangle boot.properties
     <<pinned-clojure-version>>
   #+END_SRC

** =game.js=

   #+BEGIN_SRC web :tangle game.js
     <<game>>
   #+END_SRC

** =index.html=

   #+BEGIN_SRC web :tangle index.html
     <<skeleton>>
   #+END_SRC
